// Mocks generated by Mockito 5.4.4 from annotations
// in github_search_app/test/modules/mocks/details_repository_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:github_search_app/modules/details_repo/models/issue_model.dart'
    as _i4;
import 'package:github_search_app/modules/details_repo/models/pull_data_model.dart'
    as _i5;
import 'package:github_search_app/modules/details_repo/repository/details_repo_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DetailsRepoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailsRepoRepository extends _i1.Mock
    implements _i2.DetailsRepoRepository {
  MockDetailsRepoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.IssueModel>> fetchAllIssues(
    String? owner,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAllIssues,
          [
            owner,
            name,
          ],
        ),
        returnValue: _i3.Future<List<_i4.IssueModel>>.value(<_i4.IssueModel>[]),
      ) as _i3.Future<List<_i4.IssueModel>>);

  @override
  _i3.Future<List<_i5.PullDataModel>> fetchAllPulls(
    String? owner,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAllPulls,
          [
            owner,
            name,
          ],
        ),
        returnValue:
            _i3.Future<List<_i5.PullDataModel>>.value(<_i5.PullDataModel>[]),
      ) as _i3.Future<List<_i5.PullDataModel>>);
}
